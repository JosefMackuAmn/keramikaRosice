{"version":3,"sources":["webpack://keramika-rosice/./src/js/index.js","webpack://keramika-rosice/./src/js/utils/ajax.js","webpack://keramika-rosice/./src/js/utils/data.js","webpack://keramika-rosice/./src/js/utils/functions.js","webpack://keramika-rosice/./src/js/utils/state.js","webpack://keramika-rosice/webpack/bootstrap","webpack://keramika-rosice/webpack/runtime/define property getters","webpack://keramika-rosice/webpack/runtime/hasOwnProperty shorthand","webpack://keramika-rosice/webpack/runtime/make namespace object","webpack://keramika-rosice/webpack/startup"],"names":[],"mappings":"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;;;;;;;;;;;AC1B+C;AACnB;;AAE5B;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,wEAAkC;AAC1C;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK,UAAU,wEAAkC;AACjD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACO;;AAEP;AACA;;AAEA;AACA;;AAEA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACO;;AAEP;AACA,wBAAwB,+CAAY;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,mDAAgB;AACxB,yCAAyC,mDAAgB;AACzD;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,mCAAmC,KAAK;AACxC,sCAAsC,QAAQ;AAC9C,wCAAwC,WAAW;AACnD;AACA;;AAEA;;AAEA;AACA;;AAEA,2DAA2D,SAAI;AAC/D,gEAAgE,SAAI;AACpE;;AAEO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;;AAEP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yCAAyC,MAAM;AAC/C;AACA,MAAM;AACN;AACA,uDAAuD,MAAM;;AAE7D;AACA;;AAEA;;AAEA;;AAEA;AACA,sEAAsE,SAAI;;AAE1E;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;;;AC1PA;AACA;AACA,iEAAe;AACf;AACA;AACA,KAAK;AACL;AACA,C;;;;;;UCPA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"index.js","sourcesContent":["import state from './utils/state';\nimport * as fcns from './utils/functions';\nimport * as ajax from './utils/ajax';\nimport {formELs}  from './utils/data';\n  \n///////////////////////////////////\n///// CALLING READY FUNCTION\nfcns.ready(() => {\n\n    /////\n    // MENU\n    /////\n\n    // Select hamburger button and attach click listener\n    const hamburgerBtn = state.hamburgerBtn = document.querySelector(\"#hamburger-btn\");\n    const headerList = hamburgerBtn.nextElementSibling;\n    const headerBackDrop = document.querySelector('.header__backdrop');\n\n    const toggleHeader = (e) => {\n        e.stopPropagation();\n\n        if(![hamburgerBtn.classList].includes('header__nav-button--hiding')) {\n\n            fcns.showOrHideEl(hamburgerBtn, 'header__nav-button--show', 'header__nav-button--hide', 'header__nav-button--hiding');\n            fcns.showOrHideEl(headerList, 'header__nav-list--hidden', 'header__nav-list--visible', 'header__nav-list--hiding');\n            fcns.showOrHideEl(headerBackDrop, 'header__backdrop--hidden', 'header__backdrop--visible', 'header__backdrop--hiding');\n\n            for (const listItem of headerList.children) {\n                fcns.showOrHideEl(listItem, 'header__nav-item--hidden', 'header__nav-item--visible', 'header__nav-item--hiding');\n            }\n        }\n    }\n    headerBackDrop.addEventListener('click', toggleHeader);\n    hamburgerBtn.addEventListener(\"click\", toggleHeader);\n\n    /////\n    // CATEGORIES SLIDER\n    /////\n\n    // Try to find #categories-slider\n    const categoriesSlider = document.getElementById(\"categories-slider\");\n    // If #categories-slider found\n    if (categoriesSlider) {\n        // Find arrows\n        const arrowLeft = document.getElementById(\"arrow-left\");\n        const arrowRight = document.getElementById(\"arrow-right\");\n        \n        // Attach click listener to arrows\n        arrowLeft.addEventListener(\"click\", () => {\n            state.categoriesSlider.selectedArr = 'left';\n            fcns.moveCategoriesSlider();\n        });\n        arrowRight.addEventListener(\"click\", () => {\n            state.categoriesSlider.selectedArr = 'right';\n            fcns.moveCategoriesSlider();\n        });        \n    }\n\n    /////\n    // CART\n    /////\n\n    ///// TO ORDER BUTTON\n\n    const toOrderBtn = document.getElementById('to-order');\n    if(toOrderBtn) {\n        const orderSection = document.getElementById('cart-order');\n\n        toOrderBtn.addEventListener('click', () => {\n            orderSection.scrollIntoView({behavior: 'smooth'});\n        })\n    }\n    \n    /////\n    // CART & ORDER\n    /////\n\n    ///// Submit button event listener\n    const orderForm = document.getElementById('order-form');\n    if (orderForm) {\n        orderForm.addEventListener('submit', ajax.orderSubmitHandler);\n    }\n\n\n    // Agreement checkbox event listeners \n    \n    const agreeGDPR = document.getElementById('agree-gdpr');\n    const agreeConditions = document.getElementById('agree-conditions');\n    const submitToCartBtn = document.getElementById('submit-order');\n    if(orderForm) {\n        agreeGDPR.addEventListener('input', () => {\n            fcns.refreshSubmitBtn(agreeGDPR, agreeConditions, submitToCartBtn);\n        })\n        agreeConditions.addEventListener('input', () => {\n            fcns.refreshSubmitBtn(agreeGDPR, agreeConditions, submitToCartBtn);\n        });\n    }\n\n    ///// Input Validation\n    if(orderForm) {\n        for (const input of formELs) {\n            input.addEventListener('input', fcns.validateInput.bind(this, input));\n        }\n    }\n\n    /////\n    // E-SHOP\n    /////\n\n    ///// SUBMIT TO CART BUTTON\n    const eshopProducts = document.querySelector('.eshop__products');\n\n    if (eshopProducts) {\n        const submitBtns = eshopProducts.querySelectorAll('.post-order-btn');\n        for (const btn of submitBtns) {\n            btn.addEventListener('click', () => {\n                // Create object with action ('ADD' || 'REMOVE'), productId, csrf, amount\n                const postCartData = {\n                    action: 'ADD',\n                    productId: btn.dataset.productid,\n                    csrf: btn.dataset.csrf,\n                    amount: btn.parentElement.querySelector('input').value\n                }\n                \n                ajax.postCartHandler(postCartData).catch(err => {\n                    // ADD ERROR MODAL OPENING -----------------------------------------------------------------------\n                });\n            })\n        }\n\n    }\n\n    ///// CATEGORY SELECT\n    const categorySelect = document.querySelector('.category-select');\n\n    if (categorySelect) {\n        \n       \n        const categorySelectButtons = categorySelect.querySelectorAll('.category-select__button');\n\n        for (const btn of categorySelectButtons) {\n            const list = btn.parentElement.querySelector('.category-select__subcategory-list');\n        \n            btn.addEventListener('click', () => {\n                // changes the button style\n                fcns.switchClass(btn, 'category-select__button--show', 'category-select__button--hide');\n                // shows or removes the subcategory list\n                fcns.showOrHideEl(list, 'category-select__subcategory-list--hidden', 'category-select__subcategory-list--visible', 'category-select__subcategory-list--hiding');\n            });\n        }\n\n        ///// PRODUCT MODAL\n        const products = document.querySelectorAll('.product');\n\n        for (const prod of products) {\n            const btnShowProdModal = prod.querySelector('.product__info .to-cart-button');\n            const btnCloseProdModal = prod.querySelector('.product__modal__close-button');\n            const modal = prod.querySelector('.product__modal');\n            \n            btnShowProdModal.addEventListener('click', () => {\n                // Shows product modal\n                fcns.switchClass(modal, 'product__modal--toggled', 'product__modal--hidden');\n            });\n            btnCloseProdModal.addEventListener('click', () => {\n                // Hides product modal\n                fcns.switchClass(modal, 'product__modal--toggled', 'product__modal--hidden');\n            });            \n        }\n\n        ///// MOBILE CATEGORY SELECT\n        const categorySelectMobileBtn = categorySelect.querySelector('button');\n\n        const categorySelectList = categorySelectMobileBtn.parentElement.querySelector('.category-select__category-list');\n        const categorySelectHeading = categorySelectMobileBtn.parentElement.querySelector('.heading-2');\n        const categorySelectBackdrop = document.querySelector('.category-select__backdrop');\n        \n        const footer = document.querySelector('footer');\n    \n        window.addEventListener('scroll', () => {\n            const footerY = footer.getBoundingClientRect().y;\n            const btnY = categorySelectMobileBtn.getBoundingClientRect().y;\n    \n            if (footerY >= btnY) {\n                categorySelectList.classList.remove('scrollLocked');\n                categorySelectHeading.classList.remove('scrollLocked');\n            } else {\n                categorySelectList.classList.add('scrollLocked');\n                categorySelectHeading.classList.add('scrollLocked');\n            }\n        });\n    \n        // Toggle category select on mobile devices\n\n        const toggleCategorySelect = () => {\n            fcns.showOrHideEl(categorySelectList, 'category-select__category-list--hidden', 'category-select__category-list--visible', 'category-select__category-list--hiding');\n            fcns.showOrHideEl(categorySelectHeading, 'heading-2--hidden', 'heading-2--visible', 'heading-2--hiding');\n            fcns.showOrHideEl(categorySelectBackdrop, 'category-select__backdrop--hidden', 'category-select__backdrop--visible', 'category-select__backdrop--hiding');\n            fcns.switchClass(categorySelectMobileBtn, 'category-select__mobile-button--show', 'category-select__mobile-button--hide');\n    \n            if ([...categorySelectMobileBtn.classList].includes('category-select__mobile-button--show')) {\n                categorySelectMobileBtn.textContent = 'Zobrazit kategorie';\n            } else {\n                categorySelectMobileBtn.textContent = 'Skrýt kategorie';\n            }\n        }\n\n        categorySelectMobileBtn.addEventListener('click', toggleCategorySelect);\n        categorySelectBackdrop.addEventListener('click', toggleCategorySelect);\n    }\n});\n\n\n  ","import * as fcns from './functions';\nimport {formELs}  from './data';\n\nexport const postCartHandler = async ({ action, csrf, amount, productId }) => {\n    switch (action) {\n        case 'ADD':\n        case 'REMOVE':\n\n            // Create body object\n            const bodyObj = {\n                action: action,\n                amount: amount,\n                productId: productId\n            };\n\n            // Send request\n            fetch('/kosik', {\n                method: 'POST',\n                headers: {\n                    'X-CSRF-Token': csrf,\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                body: JSON.stringify(bodyObj)\n            }).then(res => {\n                if (!(res.ok && res.status >= 200 && res.status < 300)) {                \n                    return res.json().then(json => {\n                        throw new Error(json.msg);\n                    });\n                }\n            }).catch(err => {\n                throw new Error(err);\n            })\n\n            break;\n        default: throw new Error('Non-existing cart action');\n    }\n}\n\nexport const orderSubmitHandler = e => {\n\n    e.preventDefault();\n\n    ////Validatings input values \n\n        const emailValue = fcns.validateInput(formELs.email);\n        const firstNameValue = fcns.validateInput(formELs.firstName);\n        const lastNameValue = fcns.validateInput(formELs.lastName);\n        const phoneValue = fcns.validateInput(formELs.phone);\n        const streetValue = fcns.validateInput(formELs.street);\n        const cityValue = fcns.validateInput(formELs.city);\n        const zipCodeValue = fcns.validateInput(formELs.zipCode);\n        const deliveryValue = fcns.validateInput(formELs.delivery);\n        const paymentValue = fcns.validateInput(formELs.payment);\n\n    // If validation has failed (at least one element has class 'invalid'), returning\n\n        if(document.querySelector('.invalid')) {\n            return;\n        }\n\n    \n    if (paymentValue === 'CRD') {\n\n        // Get form elements and stripe public key\n        const stripePublicKey = e.target.dataset.stripepublickey;\n        const formEls = e.target.elements;\n\n        // Initialize stripe\n        const stripe = Stripe(stripePublicKey);\n        \n        // Create new form data\n        const formData = new FormData();\n        formData.append('_csrf', formEls._csrf.value);\n        formData.append('firstName', firstNameValue);\n        formData.append('lastName', lastNameValue);\n        formData.append('email', emailValue);\n        formData.append('phone', phoneValue);\n        formData.append('street', streetValue);\n        formData.append('city', cityValue);\n        formData.append('delivery', deliveryValue);\n        formData.append('payment', paymentValue);\n        formData.append('zipCode', zipCodeValue);\n\n        // Fetch POST /objednavka, expecting json\n        fetch('/objednavka', {\n            method: 'POST',\n            body: formData\n        }).then(res => {\n            return res.json();\n        }).then(session => {\n            return stripe.redirectToCheckout({ sessionId: session.id });\n        }).then(result => {\n            if (result.error) {\n                // SHOW ERROR MODAL ----------------------------------------------------------------------\n            }\n        }).catch(err => {\n            // SHOW ERROR MODAL ----------------------------------------------------------------------\n        }) \n    }\n}","////\n//SUBMIT\n//\nconst orderForm = document.getElementById('order-form');\n\nexport const formELs = orderForm ? orderForm.elements : undefined;\n\nexport const RegexMap = orderForm ? new Map([\n    [formELs.email, /^[a-zA-Z0-9!#$_*?^{}~-]+(\\.[a-zA-Z0-9!#$_*?^{}~-]+)*@([a-zA-Z-]+\\.)+[a-zA-z]{2,}$/],\n    [formELs.firstName, /^[a-zA-ZčČďĎňŇřŘšŠťŤáéíóúůýě]{2,}$/],\n    [formELs.lastName, /^[a-zA-ZčČďĎňŇřŘšŠťŤáéíóúůýě]{2,}$/],\n    [formELs.phone, /^[0-9]{9}$/],\n    [formELs.street, /(.+){2,}/],\n    [formELs.city, /(.+){2,}/],\n    [formELs.zipCode, /[0-9]{5}/],\n    [formELs.delivery, /(ZAS|POS|OOD)/],\n    [formELs.payment, /(DOB|CRD|BTR)/]\n]\n) : undefined;\n\nexport  const otherArgsMap = orderForm ? new Map([\n    // [input, [markedElId, removeWhiteSpace]]\n    [formELs.phone, [undefined, true]],\n    [formELs.zipCode, [undefined, true]],\n    [formELs.payment, ['order-payment']],\n    [formELs.delivery, ['order-delivery']]\n]) : undefined;","import {RegexMap, otherArgsMap}  from './data';\nimport state from './state';\n\n///////////////////////////////////\n///// DEFINING FUNCTIONS\n\n/////\n// ready function to execute when DOM is loaded\n/////\nexport const ready = callbackFunc => {\n    if (document.readyState !== 'loading') {\n        // Document is already ready, call the callback directly\n        callbackFunc();\n    } else if (document.addEventListener) {\n        // All modern browsers to register DOMContentLoaded\n        document.addEventListener('DOMContentLoaded', callbackFunc);\n    } else {\n        // Old IE browsers\n        document.attachEvent('onreadystatechange', function() {\n            if (document.readyState === 'complete') {\n                callbackFunc();\n            }\n        });\n    }\n}\n  \n/////\n// Utilities functions\n/////\nexport const outerWidth = (el) => {\n    let width = el.offsetWidth;\n    const style = getComputedStyle(el);\n\n    width += parseInt(style.marginLeft) + parseInt(style.marginRight);\n    return width;\n}\n\n// Rendering the element or removing it from the screen smoothly - with animations\n// The element must have 3 CSS Classes available - hidden class, visible class, hiding class\n// Hidden class - display: none, no animation\n// Visible class - display: block (or whatever except none) and an animation of the element appearing on the page (sliding -in or so)\n// Hiding class - animation of the element disappearing\n// Element has only one of these classes at a time.\n// The hiding class is changed to hidden class after 'animationend' event on the element\nexport const showOrHideEl = (element, hiddenClass, visibleClass, hidingClass) => {\n    if([...element.classList].includes(hiddenClass)) {\n        element.classList.remove(hiddenClass);\n        element.classList.add(visibleClass);\n    } else {\n        element.classList.remove(visibleClass);\n        element.classList.add(hidingClass);\n\n        const animationEndHandler =  function(event) {\n        if(event.pseudoElement) {\n            element.addEventListener('animationend', animationEndHandler,  {\n            capture: false,\n            once: true,\n            passive: false\n            });\n            return;\n        }\n        element.classList.remove(hidingClass);\n        element.classList.add(hiddenClass);\n        }\n\n        element.addEventListener('animationend', animationEndHandler, {\n        capture: false,\n        once: true,\n        passive: false\n        });\n    }\n}\n\n// Switching between two classes, if an element has a class A, the class A is replaced for class B, if an element has a class B, the class B is replaced for the class A\nexport const switchClass = (el, classA, classB) => {\n    if ([...el.classList].includes(classA)) {\n        el.classList.remove(classA);\n        el.classList.add(classB);\n    } else {\n        el.classList.remove(classB);\n        el.classList.add(classA);\n    }\n}\n\n/////\n// Categories slider\n/////\nexport const moveCategoriesSlider = () => {\n    // Find #categoires-scrollable-container\n    const scrollableContainer = document.getElementById(\"categories-scrollable-container\");\n\n    // Find .categories-category\n    const categoryEl = document.querySelector('.categories-category');\n    // Find categoryEl width with margin\n    const moveInPixels = outerWidth(categoryEl);\n\n    // Conditionally scroll to left or to right\n    if (state.categoriesSlider.selectedArr === 'left') {\n        scrollableContainer.scrollBy({\n        top: 0,\n        left: -moveInPixels,\n        behavior: \"smooth\"\n        });\n    } else if (state.categoriesSlider.selectedArr === 'right') {\n        scrollableContainer.scrollBy({\n        top: 0,\n        left: moveInPixels,\n        behavior: \"smooth\"\n        });\n    }\n}\n\n/////\n// SUBMIT\n/////\n\n//// Managing the disabled state\nexport const refreshSubmitBtn = (agreeGDPR, agreeConditions, submitToCartBtn)  => {\n    \n    // If both inputs are checked, disabled class on the submit button is removed\n   if (agreeGDPR.checked && agreeConditions.checked) {\n\n       submitToCartBtn.classList.remove('disabled');\n       submitToCartBtn.removeAttribute('disabled');\n\n   } else {\n\n    submitToCartBtn.classList.add('disabled');\n    submitToCartBtn.setAttribute('disabled', '');\n\n   }\n}\nexport function validateInput(input) {\n\n    // Getting regex for the current input\n    const inputRegExp = RegexMap.get(input);\n    if(!inputRegExp) {\n        return;\n    }\n\n    // Getting other arguments, if otherArgsMap contains them for current input\n    let markedElId;\n    let removeWhiteSpace;\n    if (otherArgsMap.get(input)) {\n        [markedElId, removeWhiteSpace] = otherArgsMap.get(input);\n    }\n    \n    // Getting input value, if specified, removing all single space characters (f.e in the case of zipcode)\n    let inputValue;\n    if (removeWhiteSpace) {\n        inputValue = input.value.trim().replace(/\\s/g, \"\");\n    } else {\n        inputValue = input.value.trim();\n    }\n\n    \n    // Getting element, on which the 'invalid' class is added in validation fail cases\n    let markedEl;\n    if (markedElId) {\n        markedEl = document.getElementById(markedElId);\n    } else {\n        markedEl = input;\n    }\n\n    // If input value doesn´t match the regular expression, validation 'fails' - the invalid class is added on markedEl, new Error is thrown\n    if(!inputRegExp.test(inputValue)) {\n        markedEl.classList.add('invalid');\n    } else {\n        markedEl.classList.remove('invalid');\n    }\n\n    return inputValue;\n}\n/////\n// MODAL\n/////\nexport const createModal = (text, subText, buttonText) => {\n    const modal = document.createElement('div');\n    const body = document.body;\n\n    modal.classList.add('modal');\n    modal.innerHTML = `<div class=\"modal__backdrop\"></div>\n    <div class=\"modal__window\">\n        <div class=\"modal__text\">${text}</div>\n        <div class=\"modal__subtext\">${subText}</div>\n        <button class=\"modal__button\">${buttonText}</button>\n        <div class=\"close-button\"></div>\n    </div>`;\n   \n    body.appendChild(modal);\n\n    const modalButton = modal.querySelector('.modal__button');\n    const modalCloseButton = modal.querySelector('.close-button');\n\n    modalButton.addEventListener('click', removeModal.bind(this, modal));\n    modalCloseButton.addEventListener('click', removeModal.bind(this, modal))\n}\n\nexport const removeModal = modal => {\n    modal.parentElement.removeChild(modal);\n}\n/////\n// CART-HINT\n/////\nexport const removeCartHint = cartHint => {\n    cartHint.parentElement.removeChild(cartHint);\n}\nexport const createCartHint = (state, text) => {\n\n    // Removing current cart hint if any\n    const currentCartHint = document.querySelector('.cart-hint');\n\n    if(currentCartHint) {\n        currentCartHint.parentElement.removeChild(currentCartHint);\n    }\n\n    // State = 'success' | 'failed'\n    if(state !== 'success' && state !== 'failed') {\n        return;\n    }\n\n    let cartHint = document.createElement('div');\n    const body = document.body;\n\n    cartHint.classList.add('cart-hint');\n    cartHint.classList.add('cart-hint--visible');\n    cartHint.classList.add(`cart-hint--${state}`);\n    cartHint.innerHTML = `<div class=\"cart-hint__text\">\n    ${text}\n    </div>\n    <div class=\"cart-hint__symbol cart-hint__symbol--${state}\">\n\n    </div>\n    <button class=\"close-button\">\n\n    </button>`;\n\n    body.appendChild(cartHint);\n\n    const cartHintCloseButton = cartHint.querySelector('button');\n    cartHintCloseButton.addEventListener('click', removeCartHint.bind(this, cartHint));\n\n    // Cart hint gradually dissapears after 5 seconds\n    setTimeout(() => {\n        cartHint = document.querySelector('.cart-hint');\n        cartHint.addEventListener('animationend', () => {\n            removeCartHint(cartHint);\n        })\n        switchClass(cartHint, 'cart-hint--visible', 'cart-hint--hiding');\n    }, 5000)\n}\n\n","///////////////////////////////////\n///// DEFINE STATE\nexport default {\n    categoriesSlider: {\n        selectedArr: null // 'left' || 'right'\n    },\n    hamburgerBtn: null\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./src/js/index.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}